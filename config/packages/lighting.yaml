###############################################################################
#   @author         :   thejefreystone 
#   @date           :   10/05/2020
#   @package        :   Lighting
#   @description    :   All the Lightning specific configs. 
###############################################################################

input_number:
  master_bedroom_wakeup:
    name: Master Bedroom Wakeup Lighting
    initial: 8.5
    min: 8.5
    max: 255
    step: 8.5


script:

  livingroom_lamps_on:
    sequence:
    - service: scene.turn_on 
      entity_id: scene.normal_livingroom_lighting

  # Turn on Living Room Lights if sun is down or cloud coverage is above 70%
  # livingroom_lamps_on_dark:
  #   sequence:
  #   - condition: or
  #     conditions:
  #       - condition: state  
  #         entity_id: sun.sun
  #         state: 'below_horizon'
  #   - service: scene.turn_on 
  #     entity_id: scene.normal_livingroom_lighting

  # # Turn off Living Room Lights if sun is up and it is sunny or partly cloudy
  # livingroom_lights_off:
  #   sequence:
  #   - condition: and
  #     conditions:
  #       - condition: state  
  #         entity_id: sun.sun
  #         state: 'above_horizon'
  #       - condition: state
  #         entity_id: binary_sensor.living_room_motion
  #         state: 'off'
  #       - condition: template
  #         value_template: >
  #           {%- if states.weather.home.state == "sunny" or states.weather.home.state == "partlycloudy" -%}
  #             true
  #           {%- endif -%}
  #   - service: group.turn_off 
  #     entity_id: group.livingroom


#################################################
  

  theater_lights_down:
    sequence:
    - service: scene.turn_on
      entity_id: scene.theater_dim 
    - delay:
        minutes: 1
    - service: scene.turn_on
      entity_id: scene.theater_dark 

  theater_lights_up:
    sequence:
    - service: scene.turn_on
      entity_id: scene.theater_dim 
    - delay:
        minutes: 1
    - service: scene.turn_on
      entity_id: scene.theater_bright

#################################################

  master_bedroom_lights_w_level:
    sequence:
      - service: light.turn_on
        entity_id: light.kats_lamp, light.master_bedroom_tower_lamp, light.jeffs_lamp
        data:
          brightness: >
              {{ level | int }}
          color_temp: 369
         
  master_bedroom_nightlight:
    sequence:
      - service: scene.turn_on
        entity_id: scene.master_bedroom_nightlight
      - delay: '00:04:00'
      - service: scene.turn_on
        entity_id: scene.master_bedroom_off

  master_bedroom_morning_wakeup_lighting:
    sequence:
      - repeat:
          while:
            - condition: template
              value_template: '{{ states("input_number.master_bedroom_wakeup") | int < 256 }}'
          sequence:
            - service: script.master_bedroom_lights_w_level
              data:
                  level: '{{ states("input_number.master_bedroom_wakeup") }}'
            - service: input_number.increment
              entity_id: input_number.master_bedroom_wakeup
            - delay: 00:01:00
      - service: input_number.set_value
        data:
          entity_id: input_number.master_bedroom_wakeup
          value: 8.5
 

#################################################
  studio_sleep:
    sequence:
      - if:
        - condition: template
          value_template: >-  
            {{ is_state('sensor.ender5_state','idle') and states('sensor.octoprint_print_status') not in ['Printing'] }}
        then: 
          - service: light.turn_off
            entity_id: light.printer_backlight
      - service: light.turn_off
        data: {}
        target:
          area_id: studio
      - service: switch.turn_off
        data: {}
        target:
          area_id: studio

     
#################################################
  get_room_scenes:
    sequence:
      - variables:
          area: >
            {{ room }}
          normal: > 
            {{ states.scene | 
              selectattr('entity_id', 'in', area_entities(area)) |
              selectattr('entity_id', 'search', '(normal)') | 
              map(attribute='entity_id') |
            list | first }} 
          dim: > 
            {{ states.scene | 
              selectattr('entity_id', 'in', area_entities(area)) |
              selectattr('entity_id', 'search', '(dim)') | 
              map(attribute='entity_id') |
            list | first }} 
          night: >
            {{ states.scene | 
              selectattr('entity_id', 'in', area_entities(area)) |
              selectattr('entity_id', 'search', '(night)') | 
              map(attribute='entity_id') |
            list | first }} 
          scenes: >
            {"normal":"{{normal}}",
            "dim":"{{dim}}",
            "night":"{{night}}"}
      - stop: "Alright. Im done."
        response_variable: "scenes"
  get_room_lights:
    sequence:
      - variables:
          area: >
            {{ room }}
          entities: > 
            {% set lights = states.light | 
                selectattr('entity_id', 'in', area_entities(area)) |
                map(attribute='entity_id') |
                list | join(',') %}
            {"lights":"{{lights}}"} 
      - stop: "Alright. Im done."
        response_variable: "entities"
  
  master_bedroom_lights_off:
    sequence:
      - service: input_boolean.turn_off
        entity_id: input_boolean.light_override
      - service: light.turn_off
        entity_id: light.kats_lamp, light.master_bedroom_tower_lamp, light.jeffs_lamp
      
  master_bedroom_lights_override:
    sequence:
      - service: input_boolean.toggle
        entity_id: input_boolean.light_override

